import{_ as i,c as a,o as t,ae as n}from"./chunks/framework.tuuL-SzM.js";const E=JSON.parse('{"title":"按钮","description":"","frontmatter":{},"headers":[],"relativePath":"zh/BasicInput/Button.md","filePath":"zh/BasicInput/Button.md"}'),h={name:"zh/BasicInput/Button.md"};function e(l,s,p,k,r,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="按钮" tabindex="-1">按钮 <a class="header-anchor" href="#按钮" aria-label="Permalink to &quot;按钮&quot;">​</a></h1><p>Button 表示一个按钮控件，用户可以按下或单击该控件。按钮通常用于执行作或回答问题。典型的按钮包括 Ok、Apply、Cancel、Close、Yes、No 和 Help。</p><p>按钮继承自 AbstractButton 的 API。例如，您可以使用 AbstractButton API 设置文本、显示图标以及响应用户的点击。</p><p>当按钮被用户激活时，会发出 clicked()信号。将此信号连接起来以执行按钮的操作。按钮还提供了 canceled()、doubleClicked()、pressed()、released()和 pressAndHold()信号，用于长按。</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><h3 id="一个基本按钮" tabindex="-1">一个基本按钮 <a class="header-anchor" href="#一个基本按钮" aria-label="Permalink to &quot;一个基本按钮&quot;">​</a></h3><div class="language-qml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">qml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">qsTr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Standard QML Button&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">buttonSwitch.checked</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>!(../../../public/assets/images/BasicInput/Button/Button.png)[]</p><h3 id="一个带图标的按钮" tabindex="-1">一个带图标的按钮 <a class="header-anchor" href="#一个带图标的按钮" aria-label="Permalink to &quot;一个带图标的按钮&quot;">​</a></h3><div class="language-qml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">qml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Qt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolvedUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../../assets/BA_Pic_Shiroko-chibi.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">qsTr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Sunaookami Shiroko&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ToolTip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">        delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">        text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">qsTr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;icon.source: Qt.resolvedUrl(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">../../assets/BA_Pic_Shiroko-chibi.png</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">        visible</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: parent.hovered</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="一个带图标和文本的按钮" tabindex="-1">一个带图标和文本的按钮 <a class="header-anchor" href="#一个带图标和文本的按钮" aria-label="Permalink to &quot;一个带图标和文本的按钮&quot;">​</a></h3><h3 id="强调按钮" tabindex="-1">强调按钮 <a class="header-anchor" href="#强调按钮" aria-label="Permalink to &quot;强调按钮&quot;">​</a></h3><h2 id="备注" tabindex="-1">备注 <a class="header-anchor" href="#备注" aria-label="Permalink to &quot;备注&quot;">​</a></h2><h3 id="高度" tabindex="-1">高度 <a class="header-anchor" href="#高度" aria-label="Permalink to &quot;高度&quot;">​</a></h3><h3 id="样式" tabindex="-1">样式 <a class="header-anchor" href="#样式" aria-label="Permalink to &quot;样式&quot;">​</a></h3><h2 id="另请参阅" tabindex="-1">另请参阅 <a class="header-anchor" href="#另请参阅" aria-label="Permalink to &quot;另请参阅&quot;">​</a></h2>`,16)]))}const c=i(h,[["render",e]]);export{E as __pageData,c as default};
